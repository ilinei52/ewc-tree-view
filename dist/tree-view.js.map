{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/tree-view-item.js","webpack:///./src/tree-view.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA,0CAA0C,aAAa;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC3H5B;AAAA;AAA4C;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,8BAA8B;AACtC;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA,0CAA0C,eAAe;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,EAAC","file":"tree-view.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/tree-view.js\");\n","const template = document.createElement('template');\n\ntemplate.innerHTML = `\n<style\n</style> \n<li>\n  <div> \n    <span class=\"caption\">\n      <slot></slot>\n      <slot name=\"caption\"></slot>\n    </span>\n  </div>\n  <ul class=\"children\">\n    <slot name=\"children\"></slot>\n  </ul>\n</li>\n`;\n\n/**\n * Class tree view\n */\nclass TreeViewItem extends HTMLElement {\n  /**\n   * Constructor\n   * @param {object} options Component options\n   */\n  constructor(options) {\n    super();\n    this._options = options ? options : {};\n\n    this._shadowRoot = this.attachShadow({mode: 'open'});\n    this._shadowRoot.appendChild(template.content.cloneNode(true));\n\n    // Get HTMLElements\n    this._$caption = this._shadowRoot.querySelector('.caption');\n    this._$children = this._shadowRoot.querySelector('.children');\n  }\n\n  /**\n   * Get all observed attributes\n   * @return {Array<string>}\n   */\n  static get observedAttributes() {\n    return ['children', 'caption', 'tooltip', 'states', 'payload'];\n  }\n\n  /**\n   * @param  {string} name\n   * @param  {string} oldValue\n   * @param  {string} newValue\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch (name) {\n      case 'caption':\n        this._caption = newValue;\n        this._renderAttributes('caption');\n        break;\n      case 'tooltip':\n        this._tooltip = newValue;\n        this._renderAttributes('tooltip');\n        break;\n      case 'payload':\n        this._payload = newValue;\n        this._renderAttributes('payload');\n        break;\n      case 'children':\n        this._open = newValue;\n        this._renderAttributes('children');\n        break;\n    }\n  }\n\n  /**\n   * Fires when a user element is first added to the DOM.\n   */\n  connectedCallback() {\n    console.log('connectedCallback');\n  }\n\n  /**\n   * Fires when a user element was removed from DOM.\n   */\n  disconnectedCallback() {\n    console.log('disconnectedCallback');\n  }\n\n  /**\n   * Assign listeners\n   */\n  _assignListeners() {\n    console.log('_assignListeners');\n  }\n\n  /**\n   * Render by attributes\n   * @param {string} attr\n   * @param {string} value\n   */\n  _renderAttributes(attr, value) {\n    const attrName = attr.replace(/^\\w/, (c) => c.toUpperCase());\n    const renderMethodName = `renderAttribute${attrName}`;\n    if (this[renderMethodName] && typeof this[renderMethodName] === 'function') {\n      this[renderMethodName](value);\n    }\n  }\n\n  /**\n   * Render by attributes\n   * @param {string} value\n   */\n  renderAttributeCaption(value) {\n  }\n\n  // /**\n  //  * Get HTMLElement\n  //  * @param  {string} selector\n  //  * @return {HTMLElement}\n  //  */\n  // _get$(selector) {\n  //   return this._shadowRoot.querySelector(selector);\n  // }\n}\n\nexport default TreeViewItem;\n","import TreeViewItem from './tree-view-item';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n<style>\n/* Remove default bullets */\nul, #myUL {\n  list-style-type: none;\n}\n\n/* Remove margins and padding from the parent ul */\n#myUL {\n  margin: 0;\n  padding: 0;\n}\n\n/* Style the caret/arrow */// new CopyPlugin([\n  //   {from: './src/examples', to: 'examples'},\n  //   {from: './src/', to: '../dist'},\n  // ]),\n.caret {\n  cursor: pointer;\n  user-select: none; /* Prevent text selection */\n}\n\n/* Create the caret/arrow with a unicode, and style it */\n.caret::before {\n  content: \"\\\\25B6\";\n  color: black;\n  display: inline-block;\n  margin-right: 6px;\n}\n\n/* Rotate the caret/arrow icon when clicked on (using JavaScript) */\n.caret-down::before {\n  transform: rotate(90deg);\n}\n\n/* Hide the nested list */\n.nested {\n  display: none;\n}\n\n/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */\n.active {\n  display: block;\n}\n</style> \n<div>\n  treeview\n  <slot class=\"default-slot\"></slot>\n</div>\n`;\n\n\n/**\n * Class tree view\n */\nclass TreeView extends HTMLElement {\n  /**\n   * Constructor\n   * @param {object} options Component options\n   */\n  constructor(options) {\n    super();\n    this._options = options ? options : {};\n\n    this._shadowRoot = this.attachShadow({ mode: 'open' });\n    this._shadowRoot.appendChild(template.content.cloneNode(true));\n\n    // Get HTMLElements ---\n    this._$defaultSlot = this._shadowRoot.querySelector('.default-slot');\n  }\n\n  /**\n   * Fires when a user element is first added to the DOM.\n   */\n  connectedCallback() {\n    console.log('connectedCallback');\n  }\n\n  /**\n   * Fires when a user element was removed from DOM.\n   */\n  disconnectedCallback() {\n    console.log('disconnectedCallback');\n  }\n\n  /**\n   * Get all observed attributes\n   * @return {Array<string>}\n   */\n  static get observedAttributes() {\n    return ['items'];\n  }\n\n  /**\n   * @param  {string} name\n   * @param  {string} oldValue\n   * @param  {string} newValue\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    // switch(name){\n    //   case 'id':\n    //     this._id = newValue;\n    //     break;\n    //   case 'title':\n    //     this._title = newValue;\n    //     break;\n    //   case 'open':\n    //     this._open = newValue == \"true\" ? true : false;\n    //     break;\n    //   case 'position':\n    //     this._open = newValue;\n    //     break;\n    // }\n    this.render();\n  }\n\n  /**\n   * Assign listeners\n   */\n  _assignListeners() {\n\n  }\n\n  /**\n   * Component render function\n   */\n  render() {\n    // if (this.hasOwnProperty('items')) {\n    // }\n  }\n\n  // /**\n  //  * Render property items\n  //  */\n  // _renderItems () {\n  //   // create all tree-view-items this.items\n  // }\n\n  // /**\n  //  * Render property items\n  //  */\n  // _renderItem (item) {\n  //   return new TreeViewItem (item);\n  // }\n}\n\nexport default TreeView;\n"],"sourceRoot":""}